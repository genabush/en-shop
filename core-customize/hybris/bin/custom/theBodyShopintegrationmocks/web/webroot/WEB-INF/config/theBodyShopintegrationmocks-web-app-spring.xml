<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c)
  ~ 2019 THE BODY SHOP INTERNATIONAL LIMITED.
  ~ All rights reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd ">

    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

    <!-- HYBRIS .... Spring managed FilterChain for hybris Filter stack -->
    <bean id="theBodyShopintegrationmocksPlatformFilterChain" class="de.hybris.platform.servicelayer.web.PlatformFilterChain">
        <constructor-arg>
            <list>
                <ref bean="log4jFilter" />
                <ref bean="dynamicTenantActivationFilter" />
                <ref bean="sessionFilter" />
                <ref bean="theBodyShopintegrationmocksSecureMediaFilter" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="theBodyShopintegrationmocksSecureMediaFilter" class="de.hybris.platform.servicelayer.web.SecureMediaFilter">
        <property name="mediaPermissionService" ref="mediaPermissionService" />
        <property name="modelService" ref="modelService" />
        <property name="userService" ref="userService" />
        <property name="mediaService" ref="mediaService" />
        <!-- <property name="secureMediaToken" value="securemedias"/> securemedias is default but you may overwrite it -->
    </bean>

    <bean id="exceptionResolver" class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
        <property name="warnLogCategory" value="uk.co.portaltech" />
        <property name="defaultFault" value="SERVER" />
        <property name="exceptionMappings">
            <value>
                org.springframework.oxm.ValidationFailureException=CLIENT,Invalid request
            </value>
        </property>
    </bean>

    <context:component-scan base-package="uk.co.thebodyshop.integration.mocks" />

    <sws:annotation-driven />

    <bean id="PlaceOrderService" class="uk.co.thebodyshop.integration.mocks.wsdl.configuration.EmptyRequestSuffixWsdlDefinition" lazy-init="false">
        <property name="schemaCollection">
            <bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
                <property name="inline" value="true" />
                <property name="xsds">
                    <list>
                        <value>classpath:/schema/IntegrationPlaceOrder.xsd</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="portTypeName" value="PlaceOrderService" />
        <property name="serviceName" value="PlaceOrderService" />
        <property name="requestSuffix" value=""/>
        <property name="locationUri" value="/mocks" />
        <property name="targetNamespace" value="http://placeOrder.v1.ws.mercury.com"/>
    </bean>

</beans>
